apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-django-ui
  labels:
    app: demo-django
    tier: ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-django
      tier: ui
  template:
    metadata:
      labels:
        app: demo-django
        tier: ui
    spec:
      containers:
      - name: ui
        image: codescope/demo-django-ui:${COMMIT}
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: demo-django-ui
  labels:
    app: demo-django
    tier: ui
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: demo-django
    tier: ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-django-frontend
  labels:
    app: demo-django
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-django
      tier: frontend
  template:
    metadata:
      labels:
        app: demo-django
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: codescope/demo-django:${COMMIT}
        command: ["codescope-run", "gunicorn", "demo.wsgi", "-b", "0.0.0.0:8000"]
        ports:
        - containerPort: 8000
        env:
        - name: CODESCOPE_SERVICE
          value: frontend
        - name: CODESCOPE_APIKEY
          value: ${CODESCOPE_APIKEY}
        - name: CODESCOPE_ENVIRONMENT
          value: ${CODESCOPE_ENVIRONMENT}
        - name: REDIS_HOST
          value: demo-django-redis
---
apiVersion: v1
kind: Service
metadata:
  name: demo-django-frontend
  labels:
    app: demo-django
    tier: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
spec:
  type: LoadBalancer
  ports:
  - port: 8000
  selector:
    app: demo-django
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-django-worker
  labels:
    app: demo-django
    tier: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-django
      tier: worker
  template:
    metadata:
      labels:
        app: demo-django
        tier: worker
    spec:
      containers:
      - name: worker
        image: codescope/demo-django:${COMMIT}
        command: ["codescope-run", "celery", "-A", "demo", "worker", "-l", "info"]
        env:
        - name: CODESCOPE_SERVICE
          value: worker
        - name: CODESCOPE_APIKEY
          value: ${CODESCOPE_APIKEY}
        - name: CODESCOPE_ENVIRONMENT
          value: ${CODESCOPE_ENVIRONMENT}
        - name: REDIS_HOST
          value: demo-django-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-django-redis
  labels:
    app: demo-django
    tier: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-django
      tier: redis
  template:
    metadata:
      labels:
        app: demo-django
        tier: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
---
kind: Service
apiVersion: v1
metadata:
  name: demo-django-redis
  labels:
    app: demo-django
    tier: redis
spec:
  selector:
    app: demo-django
    tier: redis
  ports:
  - port: 6379
